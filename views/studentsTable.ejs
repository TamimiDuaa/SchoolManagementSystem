<!DOCTYPE html>
<html>
    <head>
        <title>Dashboard</title>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <link rel="stylesheet" href="/CSS/style.css">
        <link rel="stylesheet" href="https://use.fontawesome.com/releases/v6.2.0/css/all.css">
    </head>
    <body>
        
        <header id="top">
            <img id="logo" src="/image/logo.png" alt="logo">
            <div class="logout">
                <div class="dropdown">
            <h3 class="dropbtn">Hello Admin <i class="fa-solid fa-chevron-down"></i></h3>
                    <div class="dropdown-content">
                      <a href="#">Profile Page</a>
                      <a href="#">Setting</a>
                      <a href="#">Logout</a>
                    </div>
                  </div>
                <i class="fa-solid fa-envelope massege-icon"></i>
                <i class="fa-solid fa-bell"></i>
                
            </div>
           
        </header>
      
        <div class="dropdown">
        <button class="collapsed"><i class="fas fa-bars"></i></button>
        <div class="dropdown-content">
            <ul>
                <li><a>Setting</a></li>
                <li><a>Profile Page</a></li>
                <li><a>Masseges</a></li>
                <li><a>Notification</a></li>
                <li><a>Logout</a></li>
            </ul>
        </div>
        </div>
        <main class="main">
            <aside class="right-side">
                <ul>
                    <li><a href="/">Home Page</a></li>
                    <li><a href="/students">Students</a></li>
                    <li><a href="/teacher">Teacher</a></li>
                    <li><a href="/classes">Classes</a></li>
                    <li><a href="">Reports</a></li>
                    
                </ul>
            </aside>
            <section class="main-content">
                <section class="table-section">
                    <section class="search">
                        <form action="/students/search" method="GET">
                            <label for="search">
                                Search:
                                <input type="text" id="search" name="name" class="Input">
                                
                            </label>
                        </form>
                        
                    </section>
                  
                    <table class="pagination" data-pagecount="10">
                            <tr>
                                
                                <th>Name</th>
                                <th>gender</th>
                                <th>email</th>
                                <th>phone</th>
                                <th>Control</th>
                            </tr>
                            <% students.forEach(student => { %>
                                <tr id = '<%= student._id  %>'>
                                   
                                    <td><a href="/students/<%= student._id  %>"><%=student.name%></a></td>
                                    <td><%=student.gender%></td>
                                    <td><%=student.email%></td>
                                    <td><%=student.phone%></td>

                                    <td class="control-icons">
                                        <i class='fa-solid fa-plus'></i>
                                        <i class='fa-solid fa-pen-to-square'></i>
                                        <i onclick="deleteStudent('<%= student._id  %>')" class="fa-solid fa-trash"></i>
                                    </td>
                                </tr>
                                
                            <% });%>
                    </table>           
                </section>
                    <hr class="divider">
                    <aside class="icons">
                        <a href="/students/form"><i class="fa-solid fa-plus"></i></a>
                        <i class="fa-solid fa-pen-to-square"></i>
                        <i class="fa-solid fa-trash"></i>
                        <i class="fa-solid fa-print"></i>
                    </aside>          
                </section>
        </main>
       <script>
            let i=0;
            function collapse(){
                
                if(i==0){
                    document.querySelector(".collapse-div").style.visibility= "visible";
                    i++;
                }
                else if(i==1){
                    document.querySelector(".collapse-div").style.visibility= "hidden";
                    i=0;
                }
                
               // document.querySelector(".dashboard").style.backgroundColor = "black";
            }
            var perPage = 20;
            function genTables() {
                var tables = document.querySelector(".pagination");
                perPage = parseInt(tables.dataset.pagecount);
                createFooters(tables);
                createTableMeta(tables);
                loadTable(tables);
            }
    
    // based on current page, only show the elements in that range
    function loadTable(table) {
        var startIndex = 0;
    
        if (table.querySelector('th'))
            startIndex = 1;
    
        console.log(startIndex);
    
        var start = (parseInt(table.dataset.currentpage) * table.dataset.pagecount) + startIndex;
        var end = start + parseInt(table.dataset.pagecount);
        var rows = table.rows;
    
        for (var x = startIndex; x < rows.length; x++) {
            if (x < start || x >= end)
                rows[x].classList.add("inactive");
            else
                rows[x].classList.remove("inactive");
        }
    }
    
    function createTableMeta(table) {
        table.dataset.currentpage = "0";
    }
    
    function createFooters(table) {
        var hasHeader = false;
        if (table.querySelector('th'))
            hasHeader = true;
    
        var rows = table.rows.length;
    
        if (hasHeader)
            rows = rows - 1;
    
        var numPages = rows / perPage;
        var pager = document.createElement("div");
    
        // add an extra page, if we're 
        if (numPages % 1 > 0)
            numPages = Math.floor(numPages) + 1;
    
        pager.className = "pager";
        for (var i = 0; i < numPages ; i++) {
            var page = document.createElement("div");
            page.innerHTML = i + 1;
            page.className = "pager-item";
            page.dataset.index = i;
           
            if (i == 0)
                page.classList.add("selected");

            page.addEventListener('click', function() {
                var parent = this.parentNode;
                var items = parent.querySelectorAll(".pager-item");
                for (var x = 0; x < items.length; x++) {
                    items[x].classList.remove("selected");
                }
                this.classList.add('selected');
                table.dataset.currentpage = this.dataset.index;
                loadTable(table);
            });
            pager.appendChild(page);
        }
    
        // insert page at the top of the table
        table.parentNode.insertBefore(pager, table);
    }
    
    window.addEventListener('load', function() {
        genTables();
    });

    function deleteStudent(studentId) {
        if (confirm('Are you sure you want to delete this student?')) {
            fetch(`/students/delete/${studentId}`, {
                method: 'DELETE',
                headers: {
                    'Content-Type': 'application/json'
                },
                // Optional: If you need to send a body, you can include it here
            })
            .then(response => {
                if (response.ok) {
                    window.location.reload(); // Reload the page after successful deletion
                } else {
                    alert('Failed to delete the student');
                }
            })
            .catch(error => {
                console.error('Error:', error);
            });
        }
    }

    function createUpdateForm(){
        let updateStudentDiv = document.createElement('Div');

    }

  document.addEventListener('DOMContentLoaded', function() {
    const table = document.querySelector('table');

    // Attach click event listener to each row
    table.addEventListener('click', function(e) {
      const row = e.target.closest('tr');  // Find the clicked row
        // Prevent form input clicks from triggering the row click event
        if (e.target.tagName === 'INPUT' || e.target.tagName === 'BUTTON' || e.target.tagName === 'SELECT'|| e.target.tagName === 'TH' || e.target.closest('th')) {
        return;
      }
      if (!row) return;  // Make sure a row is clicked

      const studentId = row.id;  // Assuming row has data-id with student ID
      console.log(studentId);
      const name = row.children[0].textContent;
      const gender = row.children[1].textContent;
      const email = row.children[2].textContent;
      const phone = row.children[3].textContent;

      // Replace the row with a form
      row.innerHTML = `
        <td><input type="text" name="name" value="${name}"></td>
        <td>
          <input type="text" name="gender" value="${gender}">
        </td>
        <td><input type="email" name="email" value="${email}"></td>
        <td><input type="text" name="phone" value="${phone}"></td>
        <td><button type="button" onclick="saveRow(this, '${studentId}')">Save</button></td>
      `;
    });
  });

  // Function to save the row and send data to the server
  function saveRow(button, studentId) {
    const row = button.closest('tr');
    
    
    // Get the updated values from the inputs
    const updatedName = row.querySelector('input[name="name"]').value;
    const updatedGender = row.querySelector('input[name="gender"]').value;
    const updatedEmail = row.querySelector('input[name="email"]').value;
    const updatedPhone = row.querySelector('input[name="phone"]').value;

    // Prepare the data to be sent
    const updatedData = {
      id: studentId,
      name: updatedName,
      gender: updatedGender,
      email: updatedEmail,
      phone: updatedPhone,
    };

    // Send the data to the server via AJAX using fetch
    fetch(`/students/${studentId}`, {
      method: 'PUT',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify(updatedData)
    })
    .then(response => response.json())
    .then(data => {
      if (data.success) {
        // Replace the row content with the updated data
        row.innerHTML = `
          <td><a href='/students/${updatedData.id}'>${updatedData.name}</a></td>
          <td>${updatedData.gender}</td>
          <td>${updatedData.email}</td>
          <td>${updatedData.phone}</td>
          <td class="control-icons">
                <i class='fa-solid fa-plus'></i>
                <i class='fa-solid fa-pen-to-square'></i>
                <i onclick="deleteStudent('${updatedData.id}')" class="fa-solid fa-trash"></i>
        </td>
        `;
        console.log('Student updated successfully');
      } else {
        alert('Failed to update student');
      }
    })
    .catch(error => {
      console.error('Error:', error);
      alert('Error updating student');
    });
  }
    // function updateStudent(studentId){
    //     // Attach click event listener to each row
    //         document.querySelector('table').addEventListener('click', function(e) {
    //         const row = e.target.closest('tr');  // Find the clicked row
    //         if (!row) return;  // Make sure a row is clicked

    //         // Get the current row's data
    //         const name = row.children[0].textContent;
    //         const gender = row.children[1].textContent;
    //         const email = row.children[2].textContent;
    //         const phone = row.children[3].textContent;

    //         // Replace the row with a form
    //         row.innerHTML = `
    //             <td><input type="text" name="name" value="${name}"></td>
    //             <td><input type="text" name="name" value="${gender}"></td>

    //             <td><input type="email" name="email" value="${email}"></td>
    //             <td><input type="text" name="phone" value="${phone}"></td>
    //             <td><button type="button" onclick="saveRow(this)">Save</button></td>
    //         `;

    //     })
            
    //     function saveRow(button) {
    //         const row = button.closest('tr');
            
    //         // Get the updated values from the inputs
    //         const updatedName = row.querySelector('input[name="name"]').value;
    //         const updatedGender = row.querySelector('input[name="gender"]').value;
    //         const updatedEmail = row.querySelector('input[name="email"]').value;
    //         const updatedPhone = row.querySelector('input[name="phone"]').value;

    //         // Update the row's content to reflect the new data (in place of the form)
    //         row.innerHTML = `
    //         <td>${updatedName}</td>
    //         <td>${updatedGender}</td>
    //         <td>${updatedEmail}</td>
    //         <td>${updatedPhone}</td>
            
    //         `;
    //         const updatedData = {
    //             id: studentId,
    //             name: updatedName,
    //             gender: updatedGender,
    //             email: updatedEmail,
    //             phone: updatedPhone,
    //         };
    //         fetch(`/students/${studentId}`, {
    //             method: 'PUT',
    //             headers: {
    //                 'Content-Type': 'application/json'
    //             },
    //             body: JSON.stringify(updatedData)                
    //         })
    // .then(response => response.json())
    // .then(data => {
    //   if (data.success) {
    //     // Replace the row content with the updated data
    //     row.innerHTML = `
    //       <td>${updatedData.name}</td>
    //       <td>${updatedData.gender}</td>
    //       <td>${updatedData.email}</td>
    //       <td>${updatedData.phone}</td>
    //       <td>${updatedData.classes}</td>
    //     `;
    //     console.log('Student updated successfully');
    //   } else {
    //     alert('Failed to update student');
    //   }
    // })
    // .catch(error => {
    //   console.error('Error:', error);
    //   alert('Error updating student');
    // });
        
    //     }
    // }

       </script>

    </body>
</html>